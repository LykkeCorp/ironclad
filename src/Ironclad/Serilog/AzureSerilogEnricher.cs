// <auto-generated/>
// Not auto generated: https://github.com/dotnet/roslyn/issues/3705

// Copyright 2013-2018 Serilog Contributors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Modifications copyright (c) Lykke Corp.

namespace Serilog
{
    using System;
    using Serilog.Core;
    using Serilog.Events;

    public class AzureSerilogEnricher : ILogEventEnricher
    {
        public const string InstanceIdPropertyName = "InstanceId";

        private LogEventProperty cachedProperty;

        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            logEvent.AddPropertyIfAbsent(this.GetLogEventProperty(propertyFactory));
        }

        private static LogEventProperty CreateProperty(ILogEventPropertyFactory propertyFactory)
        {
            var instanceId = Environment.GetEnvironmentVariable("WEBSITE_INSTANCE_ID");
            if (string.IsNullOrEmpty(instanceId))
            {
                instanceId = Environment.MachineName;
            }
            else
            {
                instanceId = instanceId.Substring(0, Math.Min(8, instanceId.Length));
            }

            return propertyFactory.CreateProperty(InstanceIdPropertyName, instanceId);
        }

        private LogEventProperty GetLogEventProperty(ILogEventPropertyFactory propertyFactory)
        {
            if (this.cachedProperty == null)
            {
                this.cachedProperty = CreateProperty(propertyFactory);
            }

            return this.cachedProperty;
        }
    }
}